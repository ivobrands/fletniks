
@using System.Collections
@using System.Runtime.InteropServices.ComTypes
@using System.Security.Claims
@using fletnix.Models
@using fletnix.ViewModels
@model fletnix.Services.PaginatedList<fletnix.Models.Movie>

<!DOCTYPE html>


<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>

<form asp-action="Index" method="get">
    <div>
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
@if (Model == null)
{
    var MostPopularOfLastTwoWeeks = (List<PopularMoviesViewModel>) ViewData["MostPopularMoviesOfLastTwoWeeks"];
    var MostPopularOfAllTime = (List<PopularMoviesViewModel>) ViewData["MostPopularOfAllTime"];
    
    <div class="col-md-12">
        <div class="col-md-6">
            <h3>Most popular of all time</h3>
            <table class="table" style="display: inline-block;">
                <thead>
                <tr>
                    <th>
                        Title
                    </th>
                    <th>
                        Duration
                    </th>
                    <th>
                        Year
                    </th>
                    <th>
                        Price
                    </th>
                </tr>
                </thead>
                <tr>
                <tbody>
                @foreach (var item in MostPopularOfAllTime)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.Duration)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.PublicationYear)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.Price)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Movie.MovieId">Details</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

        </div>
        <div class="col-md-6">
            <h3>Most popular of last two weeks</h3>
            <table class="table" style="display: inline-block;">
                <thead>
                <tr>
                    <th>
                        Title
                    </th>
                    <th>
                        Duration
                    </th>
                    <th>
                        Year
                    </th>
                    <th>
                        Price
                    </th>
                </tr>
                </thead>
                <tr>
                <tbody>
                @foreach (var item in MostPopularOfLastTwoWeeks)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.Duration)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.PublicationYear)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Movie.Price)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Movie.MovieId">Details</a>
                        </td>
                    </tr>
                }
                </tbody>
            </table>

        </div>
    </div>
}
else
{
    @if (Model.Count > 1)
     {
         <table class="table" style="display: inline-block;">
             <thead>
             <tr>
                 <th>
                     Title
                 </th>
                 <th>
                     <a asp-action="Index" asp-route-sortOrder="@ViewData["DurationSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Duration</a>
                 </th>
                 <th>
                     Description
                 </th>
                 <th>
                     <a asp-action="Index" asp-route-sortOrder="@ViewData["PublicationYearSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Year</a>
                 </th>
                 <th>
                     Price
                 </th>
                 <th>
                     
                 </th>
             </tr>
             </thead>
             <tr>
             <tbody>
             @foreach (var item in Model)
             {
                 <tr>
                     <td>
                         @Html.DisplayFor(modelItem => item.Title)
                     </td>
                     <td>
                         @Html.DisplayFor(modelItem => item.Duration)
                     </td>

                     <td>
                         @Html.DisplayFor(modelItem => item.Description)
                     </td>
                     <td>
                         @Html.DisplayFor(modelItem => item.PublicationYear)
                     </td>
                     <td>
                         @Html.DisplayFor(modelItem => item.Price)
                     </td>
                     <td>
                         <a asp-action="Details" asp-route-id="@item.MovieId">Details</a>
                     </td>
                 </tr>
             }
             </tbody>
         </table>



         var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
         var nextDisabled = !Model.HasNextPage ? "disabled" : "";


         <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-page="@(Model.PageIndex - 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-default @prevDisabled">
             Previous
         </a>
         <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-page="@(Model.PageIndex + 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-default @nextDisabled">
             Next
         </a>

     }
     else
     {
         <text>No results found</text>
     }

}


</body>
</html>
